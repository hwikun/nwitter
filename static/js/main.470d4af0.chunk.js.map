{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Profile","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","Router","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.470d4af0.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"../fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst Router = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <HashRouter>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import { authService } from \"../fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Router from \"./Router\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <Router\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Loading...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport firebase from \"./fbase\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}